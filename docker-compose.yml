services:
  postgres-db:
    image: postgres
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - alfredo-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
      
  minio:
    image: minio/minio
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - minio-data:/data
      - ./certs:/root/.minio/certs
    command: server /data --console-address ":9001" --certs-dir /root/.minio/certs
    healthcheck:
      test: ["CMD", "curl", "-f", "--insecure", "https://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console

  minio-init:
    image: minio/mc
    env_file:
      - .env
    volumes:
      - ./scripts/init-minio.sh:/init-minio.sh
      - ./certs:/certs
    entrypoint: ["/bin/sh", "/init-minio.sh"]
    depends_on:
      minio:
        condition: service_healthy
  alfredo-bot:
    build:
      context: .
    image: alfredo-bot:latest
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./certs:/app/certs:ro
    depends_on:
      postgres-db:
        condition: service_healthy
      minio-init:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["./app", "serve"]

volumes:
  alfredo-db-data:
  minio-data: