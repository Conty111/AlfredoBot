services:
  postgres:
    image: postgres
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - alfredo-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
      
  minio:
    restart: unless-stopped
    image: minio/minio:latest
    command: server /data --console-address ":9001" --certs-dir /certs
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=alfredoadmin
      - MINIO_ROOT_PASSWORD=alfredoadmin
      - MINIO_SKIP_CLIENT=yes
      - MINIO_SCHEME=https
      - MINIO_CONSOLE_PORT_NUMBER=9001
    volumes:
      - minio-data:/data
      - ./certs:/certs
    healthcheck:
      test: [ "CMD", "curl", "-k", "https://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-init:
    image: minio/mc
    env_file:
      - .env
    volumes:
      - ./scripts/create-bucket.sh:/create-bucket.sh
      - ./certs:/certs
    entrypoint: ["/bin/sh", "/create-bucket.sh"]
    depends_on:
      minio:
        condition: service_healthy
  telegram-bot:
    build:
      context: .
    image: alfredo-bot:latest
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./certs:/certs:ro
      - ./config.docker.yaml:/config.yaml:ro
    depends_on:
      postgres:
        condition: service_healthy
      minio-init:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["./app", "serve", "--config", "config.yaml"]

volumes:
  alfredo-db-data:
  minio-data: